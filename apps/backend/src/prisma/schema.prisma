datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  clerkId     String        @unique
  providerId  String?       @unique @db.ObjectId
  provider    Provider?     @relation(fields: [providerId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  ProviderKey ProviderKey[]
  ClientKey   ClientKey[]
}

model Provider {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String        @unique
  users       User?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  deletedAt   DateTime?
  ProviderKey ProviderKey[]
  Proxy       Proxy[]
}

model ClientKey {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  key       String   @unique
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId, id])
}

model ProviderKey {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  key        String   @unique
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  providerId String   @db.ObjectId
  provider   Provider @relation(fields: [providerId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([userId, id])
  @@index([providerId, id])
}

model Proxy {
  id                String    @id @default(auto()) @map("_id") @db.ObjectId
  url               String
  providerProxyId   String    @unique
  providerProxyName String
  providerId        String    @db.ObjectId
  provider          Provider  @relation(fields: [providerId], references: [id])
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  deletedAt         DateTime?

  @@index([deletedAt, id])
}
