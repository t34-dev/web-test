datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  clerkUserId String  @unique
  isProvider  Boolean @default(false)

  ProviderKeys ProviderKey[]
  ClientKeys   ClientKey[]
  Wallets      Wallet[]
  Proxy        Proxy[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ClientKey {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  key String @unique

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([userId, id])
}

model ProviderKey {
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  key String @unique

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([deletedAt, userId, id])
}

model Proxy {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  url               String
  providerProxyId   String @unique
  providerProxyName String

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@index([deletedAt, id])
}

enum WalletMessageVersion {
  v1
}

model Wallet {
  id             String               @id @default(auto()) @map("_id") @db.ObjectId
  signature      String?
  address        String?
  salt           String               @unique
  messageVersion WalletMessageVersion

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@unique([userId, deletedAt]) // у пользователя только 1 активный кошелёк
  @@unique([address, deletedAt]) // только один активный кошелёк с данным адресом
}
